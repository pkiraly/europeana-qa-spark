#!/usr/bin/env bash
#
# Run the record level measure of main features
# 
# nohup ./run-all-completeness v2018-08-completeness-ext.csv "-" --extendedFieldExtraction > v2018-08-completeness-ext.log &
#
# Input
#   The json files take place on HDFS /europeana directory
# Output
#   You should specify a file name, such as resultXX.csv
#   This will be the input of top level, and collection level aggregations

OUTPUT=$1
SKIP_FLAG=$2
EXTFIELD_EXTRACTION_FLAG=$3
JAR_VERSION=0.6-SNAPSHOT

if [[ ("$#" -ne 1 && "$#" -ne 2 && "$#" -ne 3) || ("$OUTPUT" == "") ]]; then
  echo "You should add an output file (such as resultXX.csv)!"
  exit 1
fi

if [ -e $OUTPUT ]; then
  echo "WARNING! $OUTPUT exists, rename it to prevent overwriting the file!"
  exit 1
fi

if [[ ("$SKIP_FLAG" != "--skipEnrichments") ]]; then
  SKIP_FLAG=""
fi

if [[ ("$EXTFIELD_EXTRACTION_FLAG" != "--extendedFieldExtraction") ]]; then
  EXTFIELD_EXTRACTION_FLAG=""
fi



echo "Run completeness count"

if hdfs dfs -test -d /result; then
  hdfs dfs -rm -r -f -skipTrash /result
  sleep 5
fi

JAR=target/europeana-qa-spark-${JAR_VERSION}-jar-with-dependencies.jar
# spark-submit --class de.gwdg.europeanaqa.spark.CompletenessCount \
#   --master local[*] \
#   $JAR \
#   hdfs://localhost:54310/europeana/*.json \
#   hdfs://localhost:54310/result \
#   data-providers.txt datasets.txt \
#   $SKIP_FLAG

FORMAT="fullbean"

#  --inputFileName hdfs://localhost:54310/europeana/*.json \
#  --inputFileName hdfs://localhost:54310/europeana/*.json.gz \
#  --inputFileName /projects/pkiraly/2018-03-23/full/\*.json \
#  --inputFileName /projects/pkiraly/data-export/2018-08-23/\*.json.gz \

spark-submit --class de.gwdg.europeanaqa.spark.CompletenessCount \
  --master local[*] \
  $JAR \
  --inputFileName hdfs://localhost:54310/europeana/*.json.gz \
  --outputFileName hdfs://localhost:54310/result \
  --dataProvidersFile data-providers.txt \
  --datasetsFile datasets.txt \
  --format $FORMAT \
  $SKIP_FLAG $EXTFIELD_EXTRACTION_FLAG

echo Retrieve $OUTPUT
hdfs dfs -getmerge /result $OUTPUT
rm .$OUTPUT.crc

date +"%T"
echo "Completeness count is done!"
